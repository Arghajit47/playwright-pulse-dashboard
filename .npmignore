# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-intermediate-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
# Commented out as .next/standalone/node_modules might be needed by `next start`
# node_modules/
# jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache
*.tsbuildinfo

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarnclean

# dotenv environment variables file
.env
.env*.local
.env.development.local
.env.test.local
.env.production.local

# Next.js build
# We need .next for the CLI, but we specifically manage its inclusion via "files" in package.json
# So, we don't strictly need to list it here if "files" is authoritative.
# However, keeping it here ensures it's ignored if "files" was ever removed.
# /.next/*
# !/.next/standalone
# !/.next/static

# VSCode
.vscode/

# Optional stylelint cache
.stylelintcache

# Parcel cache files
.cache
.parcel-cache

# Next.js routing cache
.next/trace

# Storybook
.storybook
storybook-static

# Docusaurus
.docusaurus

# Mac OS folder attributes
.DS_Store

# PNPM
pnpm-lock.yaml
